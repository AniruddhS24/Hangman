/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hangmangui;


import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Scanner;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import java.io.*;

/**
 *
 * @author Aniruddh
 */
class JTextFieldLimit extends PlainDocument { //Limits the amount of characters in a text field
  private int limit;
  JTextFieldLimit(int limit) {
    super();
    this.limit = limit;
  }

  JTextFieldLimit(int limit, boolean upper) {
    super();
    this.limit = limit;
  }

  @Override
  public void insertString(int offset, String str, AttributeSet attr) throws BadLocationException {
    if (str == null)
      return;

    if ((getLength() + str.length()) <= limit) {
      super.insertString(offset, str, attr);
    }
  }
}


public class HangmanFrame extends javax.swing.JFrame {
    String realWord;
    int lives;
    String [] spaces;
    ArrayList letters;
    String total = "";
    /**
     * Creates new form HangmanFrame
     */
    public HangmanFrame() {
        initComponents();
        
        String compchoose = JOptionPane.showInputDialog(null,"Play with computer? [Y/N]");
        while(!(compchoose.toUpperCase().equals("Y") || compchoose.toUpperCase().equals("N")))
        {
        	JOptionPane.showMessageDialog(null, "Please enter 'Y' or 'N'!");
        	compchoose = JOptionPane.showInputDialog(null,"Play with computer? [Y/N]");
        }
        inputLetter.setDocument(new JTextFieldLimit(1)); //Text field limit
        
        if(compchoose.toUpperCase().equals("Y"))
        {
        	try {
				realWord = getRandomWord();
			} catch (IOException e) {
				
			}
        }
        else	
        	realWord = JOptionPane.showInputDialog(null,"Please enter the word to be played:\n*Do not show this to the player").toUpperCase();
        lives = 5;
        spaces = new String[realWord.length()];
        for(int j = 0; j < realWord.length(); j++) 
        {
            if(realWord.charAt(j) == ' ')
                spaces[j] = "   ";
            else
                spaces[j] = " _ ";  
        }
        letters = new ArrayList();
        
        total = "";
        for(int i = 0; i < spaces.length; i++)
            total+=spaces[i];
        
        displInfo(lives,letters,total);
    }
    
    private String getRandomWord() throws IOException
    {
    	InputStream in = this.getClass().getClassLoader().getResourceAsStream("Dict.txt");
    	Scanner reader = new Scanner(in);
    	ArrayList<String> words = new ArrayList<String>();
    	
    	while(reader.hasNextLine())
    	{
    		words.add(reader.nextLine());
    	}
    	
    	return words.get((int) (Math.random() * words.size())).toUpperCase();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputLetter = new javax.swing.JTextField();
        letterLabel = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        dispUsedLetters = new javax.swing.JLabel();
        dispWord = new javax.swing.JLabel();
        lblusedletters = new javax.swing.JLabel();
        lblword = new javax.swing.JLabel();
        lbllives = new javax.swing.JLabel();
        livesamt = new javax.swing.JLabel();
        quitButton = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        manLabel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        letterLabel.setText("Letter:");

        okButton.setBackground(new java.awt.Color(51, 255, 51));
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        dispWord.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N

        lblusedletters.setText("Letters Used:");

        lblword.setText("The Word:");

        lbllives.setText("Lives:");

        livesamt.setText("-");

        quitButton.setFont(new java.awt.Font("Imprint MT Shadow", 0, 11)); // NOI18N
        quitButton.setText("RESTART");
        quitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quitButtonMouseClicked(evt);
            }
        });

        title.setBackground(new java.awt.Color(255, 0, 51));
        title.setFont(new java.awt.Font("Algerian", 3, 18)); // NOI18N
        title.setForeground(new java.awt.Color(255, 0, 0));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("HANGMAN");

        javax.swing.GroupLayout manLabelLayout = new javax.swing.GroupLayout(manLabel);
        manLabel.setLayout(manLabelLayout);
        manLabelLayout.setHorizontalGroup(
            manLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        manLabelLayout.setVerticalGroup(
            manLabelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(quitButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, Short.MAX_VALUE)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(168, 168, 168)
                        .addComponent(lbllives))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(letterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(inputLetter, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(okButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(dispWord, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblword)
                                    .addComponent(lblusedletters)
                                    .addComponent(dispUsedLetters, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(manLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(livesamt, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 35, Short.MAX_VALUE)
                        .addComponent(lblusedletters)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dispUsedLetters, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(letterLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputLetter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblword))
                    .addComponent(manLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dispWord, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbllives)
                        .addComponent(livesamt)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //MAIN CODE: Runs when OK button is pressed
    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        
        String usin = inputLetter.getText().toUpperCase();
        char chusin = usin.charAt(0);
        inputLetter.setText("");
        boolean morethanonce;
        if(letters.contains(usin))
            morethanonce = false;
        else
            morethanonce = true;
        
        if(Character.isLetter(chusin) && morethanonce) 
        {
            letters.add(usin);
            for(int i = 0; i < realWord.length(); i++) {
                if(realWord.charAt(i) == chusin) { 
                       spaces[i] = usin;
                } 
            }
        } 
        else if(!Character.isLetter(chusin)) 
        { //If NOT a letter...
            JOptionPane.showMessageDialog(null,"Please enter a letter!\n");
        }
        
        total = "";
        for(int i = 0; i < spaces.length; i++)
            total+=spaces[i];
        
                
                //Wrong
                if(!realWord.contains(usin) && Character.isLetter(chusin) && morethanonce) {
                    lives--;
                    displInfo(lives,letters,total);
                    status.setText("Incorrect.");
                } else if(realWord.contains(usin) && Character.isLetter(chusin) && morethanonce) {
                    displInfo(lives,letters,total);
                    status.setText("Correct!");
                }
               //Lose state
               if(lives == 0) {
                   displInfo(lives,letters,total);
                   JOptionPane.showMessageDialog(this,"\nSorry, you lose. The word was " + realWord + ". Better luck next time!");
                   inputLetter.setEditable(false);
                   okButton.setEnabled(false);
                }
               //Win state
               if(!total.contains(" _ ")) {
                   displInfo(lives,letters,total);
                   JOptionPane.showMessageDialog(this,"\nCongratulations, you win! The word is " + realWord + ". You had " + lives + " lives left!");
                   inputLetter.setEditable(false);
                   okButton.setEnabled(false);
                }
    }//GEN-LAST:event_okButtonActionPerformed
    
    //EXIT
    private void quitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quitButtonMouseClicked
        if (JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
        {
            dispose();
            HangmanFrame.mainmeth();
        }
        
    }//GEN-LAST:event_quitButtonMouseClicked
    
   
  

    private void displInfo(int a, ArrayList letters, String total) {
        
        livesamt.setText(Integer.toString(a));
        
        Graphics2D gfx = (Graphics2D) manLabel.getGraphics();
        gfx.drawLine(10,200,10,10);
        gfx.drawLine(10, 10, 100, 10);
        gfx.drawLine(100, 10,100, 30);
        gfx.drawLine(80,30,120, 30);
        
        switch (a) {
            case 0: gfx.setColor(new Color(255,0,0)); gfx.fillOval(80, 30, 40, 40); gfx.drawLine(100,70,100,150); gfx.drawLine(100,110,80,130); gfx.drawLine(100,110,120,130); gfx.drawLine(100,150,80,180); gfx.drawLine(100,150,120,180); gfx.setColor(new Color(0,0,0)); gfx.drawLine(90,40,95,45); gfx.drawLine(110,40,115,45); gfx.drawLine(95,40,90,45); gfx.drawLine(115,40,110,45); break;
            case 1: gfx.setColor(new Color(255,0,0)); gfx.fillOval(80, 30, 40, 40); gfx.drawLine(100,70,100,150); gfx.drawLine(100,110,80,130); gfx.drawLine(100,110,120,130); gfx.drawLine(100,150,80,180); gfx.drawLine(100,150,120,180); break;
            case 2: gfx.setColor(new Color(255,0,0)); gfx.fillOval(80, 30, 40, 40); gfx.drawLine(100,70,100,150); gfx.drawLine(100,110,80,130); gfx.drawLine(100,110,120,130); break;
            case 3: gfx.setColor(new Color(255,0,0)); gfx.fillOval(80, 30, 40, 40); gfx.drawLine(100,70,100,150);break;
            case 4: gfx.setColor(new Color(255,0,0)); gfx.fillOval(80, 30, 40, 40);  break;
        }
        dispUsedLetters.setText(letters + "");
        dispWord.setText(total + "\n\n\n");
    }

    
    public static void mainmeth() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HangmanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HangmanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HangmanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HangmanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	JOptionPane.showMessageDialog(null, "Welcome to Hangman! Hangman is a game\n"
                        + "where one must find a word by guessing possible letters."
                        + "\nThe player has 5 LIVES (attempts) to guess the word.");
                JOptionPane.showConfirmDialog(null, "Are you READY?");
                new HangmanFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dispUsedLetters;
    private javax.swing.JLabel dispWord;
    private javax.swing.JTextField inputLetter;
    private javax.swing.JLabel lbllives;
    private javax.swing.JLabel lblusedletters;
    private javax.swing.JLabel lblword;
    private javax.swing.JLabel letterLabel;
    private javax.swing.JLabel livesamt;
    private javax.swing.JPanel manLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JButton quitButton;
    private javax.swing.JLabel status;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
